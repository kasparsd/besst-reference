/**
 * Machine information CAN get
 * @module machineInformation/can/update
 */

const client = require('../../usbClient/client');
const common = require('../../usbClient/common');

module.exports.hardwareVersionNumber = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '00', newValue);
};

module.exports.modelNumber = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '02', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.serialNumber = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '03', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.customerNumber = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '04', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.manufacturer = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '05', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.params = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '06', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.errorCode = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '07', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.commonUpdate = (source, target, index, indexSec, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, index, indexSec, newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.bootLoad = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '08', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.conParams_1 = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '11', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.conParams_2 = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '12', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.conParams_3 = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '13', newValue);
};

/**
 *  @function
 *  @param {string} source - defaults to BST
 *  @param {string} target - defaults to HMI
 *  @param {string} newValue - new value
 *  @returns {Promise}
 */
module.exports.conParams_4 = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '14', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.conParams_5 = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '15', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.conParams_6 = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '16', newValue);
};

/**
 *  @function
 *  @param {string} source - defaults to BST
 *  @param {string} target - defaults to HMI
 *  @param {string} newValue - new value
 *  @returns {Promise}
 */
module.exports.conParams_7 = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '17', newValue);
};

/**
 *  @function
 *  @param {string} source - defaults to BST
 *  @param {string} target - defaults to HMI
 *  @param {string} newValue - new value
 *  @returns {Promise}
 */
module.exports.conParams_8 = (source, target, newValue) => {
    return client.request_update(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '60', '18', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.dataOfHmi_2 = (source, target, newValue) => {
    return client.request_updateSimple(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '63', '02', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @returns {Promise}
 */
module.exports.set_Hmi_Card = (source, target, newValue) => {
    return client.request_updateSimple(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '65', '00', newValue);
};


/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @returns {Promise}
 */
 module.exports.set_Hmi_Card_6501 = (source, target, newValue) => {
    return client.request_updateSimple(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '65', '01', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @returns {Promise}
 */
module.exports.clear_Hmi_Total_Mileage = (source, target, newValue) => {
    return client.request_updateSimple(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '62', '01', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @returns {Promise}
 */
module.exports.set_Hmi_Time = (source, target, newValue) => {
    return client.request_updateSimple(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '62', '02', newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @returns {Promise}
 */
module.exports.clear_Hmi_Single_Mileage = (source, target, newValue) => {
    return client.request_updateSimple(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '62', '03', newValue);
};


/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.positionSensorCalibration = (source, target,newValue) => {
    return client.request_updateSimple(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '62', '00',newValue);
};


/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.zeroPointSensorCalibration = (source, target,newValue) => {
    return client.request_updateSimple(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, '61', '01',newValue);
};

module.exports.resetBatteryErrorCode= (source, target,newValue) => {
    return client.request_get(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, common.CAN.READ_CMD, '60', 'E2',newValue);
};

/**
 * @function
 * @param {string} source - defaults to BST
 * @param {string} target - defaults to HMI
 * @param {string} newValue - new value
 * @returns {Promise}
 */
module.exports.batteryInfoSet = (source, target, index, subIndex, newValue) => {
    return client.request_updateSimple(common.USB_CMD.USB_CMD_PC_TO_CAN, source, target, index, subIndex,newValue);
};




//////////////////
// WEBPACK FOOTER
// ./node_modules/besst-usb-sdk/src/machineInformation/can/update.js
// module id = 476
// module chunks = 76