module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "warehouse-list"
  }, [_c('div', {
    staticClass: "search-header"
  }, [_c('el-form', {
    staticClass: "list-form-inline",
    attrs: {
      "inline": true
    }
  }, [_c('el-form-item', [_c('el-input', {
    attrs: {
      "placeholder": "Warehouse Name"
    },
    nativeOn: {
      "keyup": function($event) {
        if (!$event.type.indexOf('key') && _vm._k($event.keyCode, "enter", 13, $event.key, "Enter")) { return null; }
        return _vm.onSearch.apply(null, arguments)
      }
    },
    model: {
      value: (_vm.search_value),
      callback: function($$v) {
        _vm.search_value = (typeof $$v === 'string' ? $$v.trim() : $$v)
      },
      expression: "search_value"
    }
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "btn-group-inline-icon"
  }, [_c('div', {
    staticClass: "icons"
  }, [_c('div', {
    staticClass: "icon-item search",
    attrs: {
      "title": "search"
    },
    on: {
      "click": _vm.onSearch
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "icon-item clear",
    attrs: {
      "title": "clear"
    },
    on: {
      "click": _vm.onClean
    }
  })])])], 1), _vm._v(" "), _c('div', {
    staticClass: "btn-group-top"
  }, [_c('div', {
    staticClass: "icons",
    on: {
      "click": function($event) {
        return _vm.dialogAdd()
      }
    }
  }, [_vm._m(0)])])], 1), _vm._v(" "), _c('div', {
    directives: [{
      name: "loading",
      rawName: "v-loading.body",
      value: (_vm.loading),
      expression: "loading",
      modifiers: {
        "body": true
      }
    }],
    staticClass: "table-wrap"
  }, [_c('div', {
    staticClass: "table-content-holder"
  }, [(_vm.tableList.length <= 0 && !_vm.loading) ? _c('div', {
    staticClass: "no-data-content"
  }, [_vm._v("\n        noResult\n      ")]) : _c('table', {
    staticClass: "table-content",
    attrs: {
      "border": "0",
      "cellspacing": "0",
      "cellpadding": "0"
    }
  }, [_c('thead', _vm._l((_vm.headData), function(item, index) {
    return _c('td', {
      key: index
    }, [_vm._v(_vm._s(item))])
  }), 0), _vm._v(" "), (!_vm.loading && _vm.tableList.length > 0) ? _c('tbody', _vm._l((_vm.tableList), function(item) {
    return _c('tr', {
      key: item.id
    }, [_c('td', [_vm._v(_vm._s(item.warehouse_name))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.country))]), _vm._v(" "), _c('td', [_c('el-switch', {
      on: {
        "change": function($event) {
          return _vm.onChangeUsed($event, item)
        }
      },
      model: {
        value: (item.closed),
        callback: function($$v) {
          _vm.$set(item, "closed", $$v)
        },
        expression: "item.closed"
      }
    })], 1), _vm._v(" "), _c('td', [_c('button', {
      staticClass: "btn-underline",
      on: {
        "click": function($event) {
          $event.stopPropagation();
          return _vm.onThreshold(item)
        }
      }
    }, [_vm._v("\n                Threshold\n              ")]), _vm._v(" "), _c('a', {
      directives: [{
        name: "ilpermission",
        rawName: "v-ilpermission",
        value: ('warehouse-list-add'),
        expression: "'warehouse-list-add'"
      }],
      staticClass: "btn-underline",
      on: {
        "click": function($event) {
          $event.stopPropagation();
          return _vm.onEdit(item)
        }
      }
    }, [_vm._v("edit")]), _vm._v(" "), _c('a', {
      directives: [{
        name: "ilpermission",
        rawName: "v-ilpermission",
        value: ('warehouse-list-delete'),
        expression: "'warehouse-list-delete'"
      }],
      staticClass: "btn-underline",
      on: {
        "click": function($event) {
          $event.stopPropagation();
          return _vm.onDelete(item)
        }
      }
    }, [_vm._v("delete")])])])
  }), 0) : _vm._e()])]), _vm._v(" "), _c('div', {
    staticClass: "table-footer"
  }, [_c('el-pagination', {
    attrs: {
      "current-page": _vm.currentPage,
      "page-size": 10,
      "layout": "prev, pager, next, jumper",
      "total": _vm.total
    },
    on: {
      "current-change": _vm.handleCurrentChange,
      "update:currentPage": function($event) {
        _vm.currentPage = $event
      },
      "update:current-page": function($event) {
        _vm.currentPage = $event
      }
    }
  }), _vm._v(" "), _c('p', {
    staticClass: "total"
  }, [_vm._v("total: " + _vm._s(_vm.total))])], 1)]), _vm._v(" "), _c('el-dialog', {
    staticClass: "dialog-warehouse",
    attrs: {
      "title": _vm.dialogTitle,
      "visible": _vm.dialogWarehouseVisible
    },
    on: {
      "update:title": function($event) {
        _vm.dialogTitle = $event
      },
      "update:visible": function($event) {
        _vm.dialogWarehouseVisible = $event
      }
    }
  }, [_c('div', {
    staticClass: "item"
  }, [_c('div', {
    staticClass: "item-box"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v("\n          Name\n          "), _c('span', {
    staticClass: "required"
  }, [_vm._v("*")])]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('el-input', {
    model: {
      value: (_vm.warehouse.warehouse_name),
      callback: function($$v) {
        _vm.$set(_vm.warehouse, "warehouse_name", $$v)
      },
      expression: "warehouse.warehouse_name"
    }
  })], 1)])]), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('div', {
    staticClass: "item-box"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v("\n          Country\n          "), _c('span', {
    staticClass: "required"
  }, [_vm._v("*")])]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('el-select', {
    staticClass: "land",
    attrs: {
      "slot": "prepend",
      "filterable": ""
    },
    slot: "prepend",
    model: {
      value: (_vm.warehouse.country),
      callback: function($$v) {
        _vm.$set(_vm.warehouse, "country", $$v)
      },
      expression: "warehouse.country"
    }
  }, _vm._l((_vm.areaCodeList), function(item) {
    return _c('el-option', {
      key: item.area_code,
      attrs: {
        "label": item.area_en,
        "value": item.area_en
      }
    })
  }), 1)], 1)])]), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "preview"
    },
    on: {
      "click": _vm.dialogConfirm
    }
  }, [_vm._v("confirm")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.dialogCancel
    }
  }, [_vm._v("cancel")])], 1)]), _vm._v(" "), _c('el-dialog', {
    attrs: {
      "title": "Delete Warehouse",
      "visible": _vm.dialogDeleteVisible,
      "size": "tiny"
    },
    on: {
      "update:visible": function($event) {
        _vm.dialogDeleteVisible = $event
      }
    }
  }, [_c('p', [_vm._v("Are you sure to delete it ?")]), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.deleteInvitation
    }
  }, [_vm._v("yes")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": function($event) {
        _vm.dialogDeleteVisible = false
      }
    }
  }, [_vm._v("no")])], 1)])], 1)
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('button', {
    staticClass: "el-button el-button--preview",
    attrs: {
      "type": "button"
    }
  }, [_vm._v("\n          Add\n          "), _c('i', {
    staticClass: "el-icon-plus btn-icon"
  })])
}]}


//////////////////
// WEBPACK FOOTER
// ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-171f1a94","hasScoped":false}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/nl-view/warehouse/warehouseList.vue
// module id = 2704
// module chunks = 47