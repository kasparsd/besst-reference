module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "brand-list"
  }, [_c('div', {
    staticClass: "header"
  }, [_c('div', {
    staticClass: "btn-group-top"
  }, [_c('div', {
    staticClass: "icons"
  }, [(_vm.authList[_vm.Core.Const.AUTH_LIST.brandAdd]) ? _c('div', {
    staticClass: "icon-item add",
    on: {
      "click": _vm.showEditDialog
    }
  }) : _vm._e()])])]), _vm._v(" "), _c('div', {
    staticClass: "table-wrap"
  }, [_c('div', {
    staticClass: "table-content-holder"
  }, [_c('table', {
    staticClass: "table-content",
    attrs: {
      "border": "0",
      "cellspacing": "0",
      "cellpadding": "0"
    }
  }, [_c('thead', _vm._l((_vm.tableHead), function(item) {
    return _c('td', [_vm._v(_vm._s(item))])
  }), 0), _vm._v(" "), _c('tbody', _vm._l((_vm.brandList), function(item) {
    return _c('tr', {
      staticClass: "large",
      on: {
        "click": function($event) {
          return _vm.showDetailDialog(item)
        }
      }
    }, [_c('td', {
      staticClass: "td-img"
    }, [_c('img', {
      attrs: {
        "src": _vm.Core.Const.NET.IMG_URL_PREFIX + item.img
      }
    })]), _vm._v(" "), _c('td', {
      staticClass: "td-name"
    }, [_vm._v(_vm._s(item.name))]), _vm._v(" "), _c('td', {
      staticClass: "desc",
      attrs: {
        "title": item.desc
      }
    }, [_vm._v(_vm._s(item.desc))]), _vm._v(" "), _c('td', {
      staticClass: "desc"
    }, [_vm._v(_vm._s(item.website))]), _vm._v(" "), (
      _vm.authList[_vm.Core.Const.AUTH_LIST.brandEdit] &&
      _vm.authList[_vm.Core.Const.AUTH_LIST.brandDelete]
    ) ? _c('td', {
      staticClass: "icon-td"
    }, [_c('div', {
      staticClass: "icons"
    }, [(_vm.authList[_vm.Core.Const.AUTH_LIST.brandEdit]) ? _c('div', {
      staticClass: "icon-item edit",
      attrs: {
        "title": _vm.$t('edit')
      },
      on: {
        "click": function($event) {
          $event.stopPropagation();
          return _vm.showEditDialog(item)
        }
      }
    }) : _vm._e()]), _vm._v(" "), _c('div', {
      staticClass: "icons"
    }, [(_vm.authList[_vm.Core.Const.AUTH_LIST.brandDelete]) ? _c('div', {
      staticClass: "icon-item delete",
      attrs: {
        "title": _vm.$t('delete')
      },
      on: {
        "click": function($event) {
          $event.stopPropagation();
          return _vm.showDeleteDialog(item.id)
        }
      }
    }) : _vm._e()])]) : _c('td', [_vm._v("-")])])
  }), 0)]), _vm._v(" "), _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.brandList.length <= 0),
      expression: "brandList.length <= 0"
    }],
    staticClass: "no-data-content"
  }, [_vm._v("\n        " + _vm._s(_vm.$t("noResult")) + "\n      ")])]), _vm._v(" "), _c('div', {
    staticClass: "table-footer"
  }, [_c('el-pagination', {
    attrs: {
      "current-page": _vm.currentPage,
      "page-size": 10,
      "layout": "prev, pager, next",
      "total": _vm.total
    },
    on: {
      "current-change": _vm.handleCurrentChange,
      "update:currentPage": function($event) {
        _vm.currentPage = $event
      },
      "update:current-page": function($event) {
        _vm.currentPage = $event
      }
    }
  }), _vm._v(" "), _c('p', {
    staticClass: "total"
  }, [_vm._v(_vm._s(_vm.$t("total")) + ": " + _vm._s(_vm.total))])], 1)]), _vm._v(" "), _c('el-dialog', {
    attrs: {
      "title": _vm.$t('deleteBrand'),
      "visible": _vm.dialogDeleteVisible,
      "size": "tiny"
    },
    on: {
      "update:visible": function($event) {
        _vm.dialogDeleteVisible = $event
      }
    }
  }, [_c('p', [_vm._v(_vm._s(_vm.$t("deleteTip")))]), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "preview"
    },
    on: {
      "click": _vm.deleteBrand
    }
  }, [_vm._v(_vm._s(_vm.$t("yes")))]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": function($event) {
        _vm.dialogDeleteVisible = false
      }
    }
  }, [_vm._v(_vm._s(_vm.$t("no")))])], 1)]), _vm._v(" "), _c('el-dialog', {
    attrs: {
      "title": _vm.selectBrand.name ? _vm.selectBrand.name : _vm.$t('addBrand'),
      "custom-class": "edit-dialog",
      "visible": _vm.dialogEditVisible
    },
    on: {
      "update:visible": function($event) {
        _vm.dialogEditVisible = $event
      }
    }
  }, [_c('div', {
    staticClass: "dialog-container"
  }, [_c('div', {
    staticClass: "operation-holder"
  }, [_c('h4', [_vm._v(_vm._s(_vm.$t("brandInfo")))])]), _vm._v(" "), _c('div', {
    staticClass: "content-item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v(_vm._s(_vm.$t("logo")))]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('el-upload', {
    staticClass: "btn btn-primary upload-btn",
    attrs: {
      "action": _vm.upload.url,
      "show-file-list": false,
      "on-success": _vm.imageUploaded,
      "data": _vm.upload.data
    }
  }, [(!_vm.logoOptions.src) ? _c('img', {
    staticClass: "upload-icon",
    attrs: {
      "src": require("../../../assets/images/icon/icon-upload@2x.png")
    }
  }) : _c('img', {
    staticClass: "upload-icon",
    attrs: {
      "src": _vm.logoOptions.src
    }
  }), _vm._v(" "), (!_vm.logoOptions.src) ? _c('label', {
    staticClass: "tipOne"
  }, [_vm._v("PNG,JPG")]) : _vm._e(), _vm._v(" "), (!_vm.logoOptions.src) ? _c('label', {
    staticClass: "tipTwo"
  }, [_vm._v("<3M")]) : _vm._e(), _vm._v(" "), (!_vm.logoOptions.src) ? _c('label', {
    staticClass: "tipThree"
  }, [_vm._v("300*300/400*400")]) : _vm._e()])], 1)]), _vm._v(" "), _c('div', {
    staticClass: "content-item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v(_vm._s(_vm.$t("name")))]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('el-input', {
    model: {
      value: (_vm.brand.name),
      callback: function($$v) {
        _vm.$set(_vm.brand, "name", $$v)
      },
      expression: "brand.name"
    }
  })], 1)]), _vm._v(" "), _c('div', {
    staticClass: "content-item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v(_vm._s(_vm.$t("link")))]), _vm._v(" "), _c('div', {
    staticClass: "content text-area"
  }, [_c('el-input', {
    attrs: {
      "type": "textarea",
      "rows": 2,
      "resize": "none"
    },
    model: {
      value: (_vm.brand.website),
      callback: function($$v) {
        _vm.$set(_vm.brand, "website", $$v)
      },
      expression: "brand.website"
    }
  })], 1)]), _vm._v(" "), _c('div', {
    staticClass: "content-item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v(_vm._s(_vm.$t("introduction")))]), _vm._v(" "), _c('div', {
    staticClass: "content text-area"
  }, [_c('el-input', {
    attrs: {
      "type": "textarea",
      "rows": 3,
      "resize": "none"
    },
    model: {
      value: (_vm.brand.desc),
      callback: function($$v) {
        _vm.$set(_vm.brand, "desc", $$v)
      },
      expression: "brand.desc"
    }
  })], 1)])]), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "preview"
    },
    on: {
      "click": function($event) {
        $event.stopPropagation();
        return _vm.saveBrand.apply(null, arguments)
      }
    }
  }, [_vm._v(_vm._s(_vm.$t("confirm")))]), _vm._v(" "), (_vm.selectBrand.name) ? _c('el-button', {
    attrs: {
      "type": "delete"
    },
    on: {
      "click": function($event) {
        $event.stopPropagation();
        return _vm.showDeleteDialog(_vm.selectBrand.id)
      }
    }
  }, [_vm._v("\n        " + _vm._s(_vm.$t("delete")) + "\n      ")]) : _vm._e()], 1)]), _vm._v(" "), _c('el-dialog', {
    attrs: {
      "title": _vm.selectBrand.name,
      "custom-class": "edit-dialog",
      "visible": _vm.dialogDetailVisible
    },
    on: {
      "update:visible": function($event) {
        _vm.dialogDetailVisible = $event
      }
    }
  }, [_c('div', {
    staticClass: "dialog-container"
  }, [_c('div', {
    staticClass: "operation-holder"
  }, [_c('h4', [_vm._v(_vm._s(_vm.$t("brandInfo")))]), _vm._v(" "), _c('div', {
    staticClass: "btn-group"
  }, [(_vm.authList[_vm.Core.Const.AUTH_LIST.brandEdit]) ? _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": function($event) {
        return _vm.showEditDialog(_vm.selectBrand)
      }
    }
  }, [_vm._v(_vm._s(_vm.$t("edit")))]) : _vm._e(), _vm._v(" "), (_vm.authList[_vm.Core.Const.AUTH_LIST.brandDelete]) ? _c('el-button', {
    attrs: {
      "type": "delete"
    },
    on: {
      "click": function($event) {
        return _vm.showDeleteDialog(_vm.selectBrand.id)
      }
    }
  }, [_vm._v(_vm._s(_vm.$t("delete")))]) : _vm._e()], 1)]), _vm._v(" "), _c('div', {
    staticClass: "content-item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v(_vm._s(_vm.$t("logo")))]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('img', {
    attrs: {
      "src": _vm.Core.Const.NET.IMG_URL_PREFIX + _vm.selectBrand.img
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "content-item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v(_vm._s(_vm.$t("name")))]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('p', [_vm._v(_vm._s(_vm.selectBrand.name))])])]), _vm._v(" "), _c('div', {
    staticClass: "content-item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v(_vm._s(_vm.$t("introduction")))]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('p', {
    staticStyle: {
      "word-break": "break-all"
    }
  }, [_vm._v(_vm._s(_vm.selectBrand.desc))])])])])])], 1)
},staticRenderFns: []}


//////////////////
// WEBPACK FOOTER
// ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-823b2ef8","hasScoped":false}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/brand/brand/list.vue
// module id = 1738
// module chunks = 76