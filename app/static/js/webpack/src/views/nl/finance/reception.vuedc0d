module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "reception-list"
  }, [_c('div', {
    staticClass: "search-header"
  }, [_c('el-form', {
    staticClass: "list-form-inline",
    attrs: {
      "inline": true,
      "model": _vm.formSearch
    }
  }, [_c('el-form-item', {
    attrs: {
      "label": "Date"
    }
  }, [_c('el-date-picker', {
    attrs: {
      "type": "daterange",
      "placeholder": "Select date range"
    },
    model: {
      value: (_vm.formSearch.date),
      callback: function($$v) {
        _vm.$set(_vm.formSearch, "date", $$v)
      },
      expression: "formSearch.date"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "Customer"
    }
  }, [_c('el-select', {
    attrs: {
      "filterable": "",
      "placeholder": "Customer"
    },
    model: {
      value: (_vm.formSearch.customer_id),
      callback: function($$v) {
        _vm.$set(_vm.formSearch, "customer_id", $$v)
      },
      expression: "formSearch.customer_id"
    }
  }, _vm._l((_vm.customerList), function(item) {
    return _c('el-option', {
      key: item.id,
      attrs: {
        "label": item.name,
        "value": item.id
      }
    })
  }), 1)], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "Delivery No."
    }
  }, [_c('el-input', {
    attrs: {
      "placeholder": "Delivery No."
    },
    model: {
      value: (_vm.formSearch.delivery_order_no),
      callback: function($$v) {
        _vm.$set(_vm.formSearch, "delivery_order_no", $$v)
      },
      expression: "formSearch.delivery_order_no"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "Status"
    }
  }, [_c('el-select', {
    attrs: {
      "placeholder": "stastus"
    },
    model: {
      value: (_vm.formSearch.status),
      callback: function($$v) {
        _vm.$set(_vm.formSearch, "status", $$v)
      },
      expression: "formSearch.status"
    }
  }, _vm._l((_vm.statusAll), function(item) {
    return _c('el-option', {
      key: item.status,
      attrs: {
        "label": item.label,
        "value": item.status
      }
    })
  }), 1)], 1), _vm._v(" "), _c('div', {
    staticClass: "btn-group-inline-icon"
  }, [_c('div', {
    staticClass: "icons"
  }, [_c('div', {
    staticClass: "icon-item search",
    attrs: {
      "title": "search"
    },
    on: {
      "click": _vm.onSearch
    }
  }), _vm._v(" "), _c('div', {
    staticClass: "icon-item clear",
    attrs: {
      "title": "clear"
    },
    on: {
      "click": _vm.onClean
    }
  })])])], 1), _vm._v(" "), _c('div', {
    staticClass: "btn-group-top"
  }, [_c('div', {
    staticClass: "icons"
  }, [_c('div', {
    directives: [{
      name: "ilpermission",
      rawName: "v-ilpermission",
      value: ('finance-reception-add'),
      expression: "'finance-reception-add'"
    }],
    staticClass: "icon-item add-v2",
    attrs: {
      "title": "add"
    },
    on: {
      "click": _vm.dialogAdd
    }
  })])])], 1), _vm._v(" "), _c('div', {
    directives: [{
      name: "loading",
      rawName: "v-loading.body",
      value: (_vm.loading),
      expression: "loading",
      modifiers: {
        "body": true
      }
    }],
    staticClass: "table-wrap"
  }, [_c('div', {
    staticClass: "table-content-holder"
  }, [(_vm.tableList.length <= 0 && !_vm.loading) ? _c('div', {
    staticClass: "no-data-content"
  }, [_vm._v("noResult")]) : _c('table', {
    staticClass: "table-content",
    attrs: {
      "border": "0",
      "cellspacing": "0",
      "cellpadding": "0"
    }
  }, [_c('thead', _vm._l((_vm.headData), function(item, index) {
    return _c('td', {
      key: index
    }, [_vm._v(_vm._s(item))])
  }), 0), _vm._v(" "), (!_vm.loading && _vm.tableList.length > 0) ? _c('tbody', _vm._l((_vm.tableList), function(item) {
    return _c('tr', {
      key: item.id
    }, [_c('td', [_vm._v(_vm._s(_vm._f("dateFormat")(item.date)))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.delivery_order_no))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.account_name))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.account_no))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(_vm._f("currencyType")(item.currency)) + _vm._s(item.amount))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.createUser))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(_vm.statusPipe(item)))]), _vm._v(" "), _c('td', [_c('a', {
      staticClass: "btn-underline",
      on: {
        "click": function($event) {
          $event.stopPropagation();
          return _vm.onView(item)
        }
      }
    }, [_vm._v("view")]), _vm._v(" "), _c('a', {
      directives: [{
        name: "ilpermission",
        rawName: "v-ilpermission",
        value: ('finance-reception-add'),
        expression: "'finance-reception-add'"
      }],
      staticClass: "btn-underline",
      on: {
        "click": function($event) {
          $event.stopPropagation();
          return _vm.onEdit(item)
        }
      }
    }, [_vm._v("edit")]), _vm._v(" "), _c('a', {
      directives: [{
        name: "ilpermission",
        rawName: "v-ilpermission",
        value: ('finance-reception-delete'),
        expression: "'finance-reception-delete'"
      }],
      staticClass: "btn-underline",
      on: {
        "click": function($event) {
          $event.stopPropagation();
          return _vm.onDelete(item)
        }
      }
    }, [_vm._v("delete")]), _vm._v(" "), _c('el-dropdown', {
      staticClass: "statusDrop",
      attrs: {
        "trigger": "click"
      },
      on: {
        "command": function($event) {
          return _vm.handleCommand($event, item)
        }
      }
    }, [_c('span', {
      staticClass: "el-dropdown-link"
    }, [_vm._v("\n                  action\n                  "), _c('i', {
      staticClass: "el-icon-caret-bottom el-icon--right"
    })]), _vm._v(" "), _c('el-dropdown-menu', {
      attrs: {
        "slot": "dropdown"
      },
      slot: "dropdown"
    }, [_c('el-dropdown-item', {
      attrs: {
        "command": "First_Paid",
        "disabled": !(item.status === 1 || item.status === 0)
      }
    }, [_vm._v("First Paid")]), _vm._v(" "), _c('el-dropdown-item', {
      attrs: {
        "command": "Balance_Unpaid",
        "disabled": !(item.status === 2 || item.status === 1 || item.status === 0)
      }
    }, [_vm._v("Balance Unpaid")]), _vm._v(" "), _c('el-dropdown-item', {
      attrs: {
        "command": "Dunned",
        "disabled": !(item.status === 3 || item.status === 2 || item.status === 1 || item.status === 0)
      }
    }, [_vm._v("Dunned")]), _vm._v(" "), _c('el-dropdown-item', {
      attrs: {
        "command": "Finished",
        "disabled": !(item.status === 4 || item.status === 3 || item.status === 2 || item.status === 1 || item.status === 0)
      }
    }, [_vm._v("Finished")])], 1)], 1)], 1)])
  }), 0) : _vm._e()])]), _vm._v(" "), _c('div', {
    staticClass: "table-footer"
  }, [_c('el-pagination', {
    attrs: {
      "current-page": _vm.currentPage,
      "page-size": 10,
      "layout": "prev, pager, next, jumper",
      "total": _vm.total
    },
    on: {
      "current-change": _vm.handleCurrentChange,
      "update:currentPage": function($event) {
        _vm.currentPage = $event
      },
      "update:current-page": function($event) {
        _vm.currentPage = $event
      }
    }
  }), _vm._v(" "), _c('p', {
    staticClass: "total"
  }, [_vm._v("total: " + _vm._s(_vm.total))])], 1)]), _vm._v(" "), _c('el-dialog', {
    staticClass: "dialog-md",
    attrs: {
      "title": _vm.dialogTitle,
      "visible": _vm.dialogVisible,
      "custom-class": "edit-dialog"
    },
    on: {
      "update:title": function($event) {
        _vm.dialogTitle = $event
      },
      "update:visible": function($event) {
        _vm.dialogVisible = $event
      }
    }
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v("\n        Customer\n        "), _c('span', {
    staticClass: "required"
  }, [_vm._v("*")])]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('el-select', {
    staticClass: "land",
    attrs: {
      "slot": "prepend",
      "filterable": ""
    },
    on: {
      "change": _vm.handleItemChange
    },
    slot: "prepend",
    model: {
      value: (_vm.formData.customer_id),
      callback: function($$v) {
        _vm.$set(_vm.formData, "customer_id", $$v)
      },
      expression: "formData.customer_id "
    }
  }, _vm._l((_vm.customerList), function(item) {
    return _c('el-option', {
      key: item.id,
      attrs: {
        "label": item.name,
        "value": item.id
      }
    })
  }), 1)], 1)]), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v("\n        Delivery No.\n        "), _c('span', {
    staticClass: "required"
  }, [_vm._v("*")])]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('el-input', {
    staticClass: "input input-sn",
    attrs: {
      "placeholder": "Delivery No."
    },
    on: {
      "change": _vm.getDeliveryDetails
    },
    model: {
      value: (_vm.formData.delivery_order_no),
      callback: function($$v) {
        _vm.$set(_vm.formData, "delivery_order_no", $$v)
      },
      expression: "formData.delivery_order_no"
    }
  })], 1)]), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v("\n        Bank\n        "), _c('span', {
    staticClass: "required"
  }, [_vm._v("*")])]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('el-input', {
    attrs: {
      "placeholder": "Bank",
      "disabled": ""
    },
    model: {
      value: (_vm.formData.account_no),
      callback: function($$v) {
        _vm.$set(_vm.formData, "account_no", $$v)
      },
      expression: "formData.account_no"
    }
  })], 1)]), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v("\n        Amount\n        "), _c('span', {
    staticClass: "required"
  }, [_vm._v("*")])]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('el-input', {
    staticClass: "input",
    attrs: {
      "disabled": ""
    },
    model: {
      value: (_vm.formData.amount),
      callback: function($$v) {
        _vm.$set(_vm.formData, "amount", $$v)
      },
      expression: "formData.amount"
    }
  }, [_c('el-select', {
    attrs: {
      "slot": "prepend",
      "disabled": ""
    },
    slot: "prepend",
    model: {
      value: (_vm.formData.currency),
      callback: function($$v) {
        _vm.$set(_vm.formData, "currency", $$v)
      },
      expression: "formData.currency"
    }
  }, _vm._l((_vm.currencies), function(item) {
    return _c('el-option', {
      key: item.currency,
      attrs: {
        "label": item.label,
        "value": item.currency,
        "value-key": item.currency
      }
    })
  }), 1)], 1)], 1)]), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "title"
  }, [_vm._v("\n        Date\n        "), _c('span', {
    staticClass: "required"
  }, [_vm._v("*")])]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_c('el-date-picker', {
    staticClass: "input",
    attrs: {
      "type": "date",
      "placeholder": "Date"
    },
    model: {
      value: (_vm.oDate),
      callback: function($$v) {
        _vm.oDate = $$v
      },
      expression: "oDate"
    }
  })], 1)]), _vm._v(" "), _c('div', {
    staticClass: "item item-row"
  }, [_c('div', {
    staticClass: "content text-area"
  }, [_c('el-input', {
    attrs: {
      "type": "textarea",
      "placeholder": "Notes",
      "rows": 5,
      "maxlength": 250
    },
    model: {
      value: (_vm.formData.note),
      callback: function($$v) {
        _vm.$set(_vm.formData, "note", $$v)
      },
      expression: "formData.note"
    }
  }), _vm._v(" "), _c('el-upload', {
    staticClass: "btn btn-primary upload-btn",
    attrs: {
      "action": _vm.upload.url,
      "show-file-list": false,
      "on-success": _vm.imageUploaded,
      "data": _vm.upload.data
    }
  }, [(!_vm.upload.photographSrc) ? _c('img', {
    staticClass: "upload-icon",
    attrs: {
      "src": require("../../../assets/images/icon/icon-upload@2x.png")
    }
  }) : _c('img', {
    staticClass: "upload-icon",
    attrs: {
      "src": _vm._f("getImgUrl")(_vm.upload.photographSrc)
    }
  }), _vm._v(" "), (_vm.upload.photographSrc) ? _c('a', {
    attrs: {
      "src": _vm._f("getImgUrl")(_vm.upload.photographSrc)
    },
    on: {
      "click": _vm.download
    }
  }, [_vm._v("Download")]) : _vm._e()])], 1)]), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "preview"
    },
    on: {
      "click": _vm.dialogConfirm
    }
  }, [_vm._v("confirm")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.dialogCancel
    }
  }, [_vm._v("cancel")])], 1)]), _vm._v(" "), _c('el-dialog', {
    attrs: {
      "title": "Delete ",
      "visible": _vm.dialogDeleteVisible,
      "size": "tiny"
    },
    on: {
      "update:visible": function($event) {
        _vm.dialogDeleteVisible = $event
      }
    }
  }, [_c('p', [_vm._v("Are you sure to delete it ?")]), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.deleteInvitation
    }
  }, [_vm._v("yes")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": function($event) {
        _vm.dialogDeleteVisible = false
      }
    }
  }, [_vm._v("no")])], 1)]), _vm._v(" "), _c('el-dialog', {
    attrs: {
      "title": "Review Shipment Order",
      "visible": _vm.dialogReviewVisible,
      "size": "tiny"
    },
    on: {
      "update:visible": function($event) {
        _vm.dialogReviewVisible = $event
      }
    }
  }, [_c('p', [_vm._v("Are you sure to do it ?")]), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.reviewInvitation
    }
  }, [_vm._v("yes")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": function($event) {
        _vm.dialogReviewVisible = false
      }
    }
  }, [_vm._v("no")])], 1)])], 1)
},staticRenderFns: []}


//////////////////
// WEBPACK FOOTER
// ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-544c6f1f","hasScoped":false}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/nl/finance/reception.vue
// module id = 2489
// module chunks = 69