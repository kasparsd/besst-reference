module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "product-bom-list"
  }, [_c('div', {
    staticClass: "header"
  }, [_c('div', {
    staticClass: "btn-group-inline"
  }, [_c('div', {
    staticClass: "icons"
  }, [_c('div', {
    staticClass: "icon-item back",
    attrs: {
      "title": _vm.$t('back')
    },
    on: {
      "click": _vm.back
    }
  })])]), _vm._v(" "), _c('div', {
    staticClass: "btn-group-top"
  }, [_c('div', {
    staticClass: "icons"
  }, [_vm._v("\n        bom list\n        "), (_vm.authList[_vm.Core.Const.AUTH_LIST.productProductBomEdit]) ? _c('div', {
    staticClass: "icon-item",
    class: [_vm.isEdit ? 'save' : 'edit'],
    attrs: {
      "title": _vm.btnText
    },
    on: {
      "click": _vm.editBom
    }
  }) : _vm._e(), _vm._v(" "), _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (!_vm.isEdit),
      expression: "!isEdit"
    }],
    staticClass: "icon-item print",
    attrs: {
      "title": _vm.$t('print')
    },
    on: {
      "click": _vm.printBom
    }
  }), _vm._v(" "), _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (!_vm.isEdit),
      expression: "!isEdit"
    }],
    staticClass: "icon-item export",
    attrs: {
      "title": _vm.$t('export')
    },
    on: {
      "click": _vm.exportBom
    }
  }), _vm._v(" "), (_vm.authList[_vm.Core.Const.AUTH_LIST.productProductBomDelete]) ? _c('div', {
    staticClass: "icon-item delete",
    attrs: {
      "title": _vm.$t('delete')
    },
    on: {
      "click": _vm.showDeleteDialog
    }
  }) : _vm._e(), _vm._v(" "), (_vm.authList[_vm.Core.Const.AUTH_LIST.productProductAdd] || _vm.authList[_vm.Core.Const.AUTH_LIST.productProductBomDelete]) ? _c('div', {
    staticClass: "icon-item copy",
    attrs: {
      "title": _vm.$t('copy')
    },
    on: {
      "click": function($event) {
        return _vm.goToCopyView()
      }
    }
  }) : _vm._e()])])]), _vm._v(" "), _c('div', {
    staticClass: "content-holder"
  }, [_c('div', {
    staticClass: "content"
  }, [_c('div', {
    staticClass: "part top"
  }, [_c('label', [_vm._v(_vm._s(_vm.$t('articleNO')) + " :")]), _vm._v(" "), _c('label', {
    staticClass: "art-no"
  }, [_vm._v(_vm._s(_vm.artNo))]), _vm._v(" "), _c('div', {
    staticClass: "img-div"
  }, [(_vm.isEdit) ? _c('el-upload', {
    staticClass: "upload",
    attrs: {
      "action": _vm.upload.url,
      "show-file-list": false,
      "on-success": _vm.imageUploaded,
      "data": _vm.upload.data
    }
  }, [(!_vm.upload.photographSrc) ? _c('div', [_c('img', {
    staticClass: "upload-icon",
    attrs: {
      "src": require("../../../assets/images/icon/icon-upload@2x.png")
    }
  })]) : _c('img', {
    staticClass: "img",
    attrs: {
      "src": _vm.Core.Const.NET.IMG_URL_PREFIX + _vm.upload.photographSrc
    }
  })]) : _c('div', [(!_vm.upload.photographSrc) ? _c('div', {
    staticClass: "no-img"
  }, [_c('span', [_vm._v(_vm._s(_vm.$t('noPhoto')))])]) : _c('img', {
    staticClass: "img",
    attrs: {
      "src": _vm._f("getImgUrl")(_vm.upload.photographSrc)
    }
  })]), _vm._v(" "), (_vm.isEdit) ? _c('div', {
    staticClass: "tip"
  }, [_c('div', {
    staticClass: "title"
  }, [_vm._v(_vm._s(_vm.$t('tip')) + ":")]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [_vm._v(_vm._s(_vm.$t('content01'))), _c('br'), _vm._v(_vm._s(_vm.$t('content02')))])]) : _vm._e(), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary",
      "disabled": !_vm.upload.photographSrc
    },
    on: {
      "click": function($event) {
        _vm.largeImgDialogVisible = true
      }
    }
  }, [_vm._v(_vm._s(_vm.$t('viewLargerImage')) + " ")])], 1)]), _vm._v(" "), _c('div', {
    staticClass: "part list"
  }, [_c('label', {
    staticClass: "list-title"
  }, [_vm._v("\n          " + _vm._s(_vm.$t('list')) + "\n        ")]), _vm._v(" "), _c('el-input', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isEdit),
      expression: "isEdit"
    }],
    staticClass: "search-input",
    attrs: {
      "placeholder": _vm.$t('partName'),
      "icon": "search",
      "on-icon-click": _vm.showPartDialog
    },
    model: {
      value: (_vm.partName),
      callback: function($$v) {
        _vm.partName = $$v
      },
      expression: "partName"
    }
  }), _vm._v(" "), (_vm.childList.length > 0) ? _c('table', {
    staticClass: "bom-list",
    attrs: {
      "border": "0",
      "cellspacing": "0",
      "cellpadding": "0"
    }
  }, [_c('thead', [_c('tr', _vm._l((_vm.listHead), function(item) {
    return _c('td', {
      staticClass: "td head"
    }, [_vm._v(_vm._s(item))])
  }), 0)]), _vm._v(" "), _vm._l((_vm.childList), function(item, index) {
    return _c('tr', [_c('td', [_c('label', {
      directives: [{
        name: "show",
        rawName: "v-show",
        value: (!_vm.isEdit),
        expression: "!isEdit"
      }]
    }, [_vm._v(_vm._s(item.item_no || '-'))]), _vm._v(" "), _c('el-input', {
      directives: [{
        name: "show",
        rawName: "v-show",
        value: (_vm.isEdit),
        expression: "isEdit"
      }],
      staticClass: "item-input",
      model: {
        value: (item.item_no),
        callback: function($$v) {
          _vm.$set(item, "item_no", $$v)
        },
        expression: "item.item_no"
      }
    })], 1), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.ext_part_no || '-'))]), _vm._v(" "), (item.img) ? _c('td', [_c('div', {
      staticClass: "td-img"
    }, [_c('img', {
      attrs: {
        "src": _vm._f("getImgUrl")(item.img)
      }
    })])]) : _c('td', [_vm._v("-")]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.name || '-'))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.needAttr.spec || '-'))]), _vm._v(" "), (!item.needAttr.pack) ? _c('td', [_vm._v("-")]) : _c('td', [_vm._v(_vm._s(item.needAttr.pack) + " " + _vm._s(_vm._f("packUnitType")(item.needAttr.packUnti)))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.needAttr.packSize || '-'))]), _vm._v(" "), (!item.needAttr.price) ? _c('td', [_vm._v("-")]) : _c('td', [_vm._v("\n              " + _vm._s(_vm._f("currencyType")(item.needAttr.currency)) + "\n              " + _vm._s(item.needAttr.price ? parseFloat(item.needAttr.price) / 100 : 0) + "\n            ")]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.link_bom || '-'))]), _vm._v(" "), _c('td', [(!_vm.isEdit) ? _c('el-button', {
      staticClass: "btn-underline",
      attrs: {
        "type": "text"
      },
      on: {
        "click": function($event) {
          return _vm.goToItemDetail(item)
        }
      }
    }, [_vm._v(_vm._s(_vm.$t('detail')))]) : _vm._e(), _vm._v(" "), (_vm.isEdit) ? _c('el-button', {
      staticClass: "btn-underline",
      attrs: {
        "type": "text"
      },
      on: {
        "click": function($event) {
          return _vm.deleteItem(index)
        }
      }
    }, [_vm._v(_vm._s(_vm.$t('delete')))]) : _vm._e()], 1)])
  })], 2) : _vm._e(), _vm._v(" "), _c('el-dialog', {
    staticClass: "dialogAddItem",
    attrs: {
      "title": "Add Item",
      "visible": _vm.dialogAddItemVisible,
      "size": "large",
      "before-close": _vm.closeChooseItem,
      "top": "10%"
    },
    on: {
      "update:visible": function($event) {
        _vm.dialogAddItemVisible = $event
      }
    }
  }, [_c('div', [_c('table', {
    staticClass: "bom-list",
    attrs: {
      "border": "0",
      "cellspacing": "0",
      "cellpadding": "0"
    }
  }, [_c('thead', [_c('td', [_c('el-checkbox', {
    model: {
      value: (_vm.allSelectedForAdd),
      callback: function($$v) {
        _vm.allSelectedForAdd = $$v
      },
      expression: "allSelectedForAdd"
    }
  })], 1), _vm._v(" "), _vm._l((_vm.selectHead), function(item) {
    return _c('td', [_vm._v(_vm._s(item))])
  })], 2), _vm._v(" "), _c('tbody', _vm._l((_vm.selectItems), function(item, index) {
    return _c('tr', [_c('td', [_c('el-checkbox', {
      staticClass: "table-checkbox",
      model: {
        value: (item.selected),
        callback: function($$v) {
          _vm.$set(item, "selected", $$v)
        },
        expression: "item.selected"
      }
    })], 1), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.ext_part_no))]), _vm._v(" "), _c('td', [_c('div', {
      staticClass: "td-img"
    }, [_c('img', {
      attrs: {
        "src": _vm._f("getImgUrl")(item.img)
      }
    })])]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.name))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.needAttr.spec))]), _vm._v(" "), (!item.needAttr.pack) ? _c('td') : _c('td', [_vm._v(_vm._s(item.needAttr.pack) + " " + _vm._s(_vm._f("packUnitType")(item.needAttr.packUnti)))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.needAttr.packSize))]), _vm._v(" "), (!item.needAttr.price) ? _c('td') : _c('td', [_vm._v("\n                    " + _vm._s(_vm._f("currencyType")(item.needAttr.currency)) + "\n                    " + _vm._s(item.needAttr.price ? parseFloat(item.needAttr.price) / 100 : 0) + "\n                  ")]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.link_bom))])])
  }), 0)]), _vm._v(" "), _c('div', {
    staticClass: "table-footer"
  }, [_c('el-pagination', {
    attrs: {
      "current-page": _vm.currentPage,
      "page-size": 10,
      "layout": "prev, pager, next",
      "total": _vm.total
    },
    on: {
      "current-change": _vm.handleCurrentChange,
      "update:currentPage": function($event) {
        _vm.currentPage = $event
      },
      "update:current-page": function($event) {
        _vm.currentPage = $event
      }
    }
  }), _vm._v(" "), _c('p', {
    staticClass: "total"
  }, [_vm._v("Total: " + _vm._s(_vm.total))])], 1)]), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.closeDialogAndAddAll
    }
  }, [_vm._v(_vm._s(_vm.$t('add')))])], 1)])], 1)]), _vm._v(" "), _c('div', {
    staticClass: "print-bom-content-wrap"
  }, [_c('div', {
    staticClass: "content"
  }, [_c('div', {
    staticClass: "part top"
  }, [_c('label', [_vm._v(_vm._s(_vm.$t('articleNO')) + " :")]), _vm._v(" "), _c('label', {
    staticClass: "art-no"
  }, [_vm._v(_vm._s(_vm.artNo))]), _vm._v(" "), _c('div', {
    staticClass: "img-div"
  }, [(!_vm.upload.photographSrc) ? _c('div', {
    staticClass: "no-img"
  }, [_c('span', [_vm._v(_vm._s(_vm.$t('noPhoto')))])]) : _c('img', {
    staticClass: "img",
    attrs: {
      "src": _vm._f("getImgUrl")(_vm.upload.photographSrc)
    }
  })])]), _vm._v(" "), (_vm.childList.length > 0) ? _c('div', {
    staticClass: "part list"
  }, [_c('label', {
    staticClass: "list-title"
  }, [_vm._v("\n            " + _vm._s(_vm.$t('list')) + "\n          ")]), _vm._v(" "), _c('table', {
    staticClass: "bom-list",
    attrs: {
      "border": "0",
      "cellspacing": "0",
      "cellpadding": "0"
    }
  }, [_c('thead', [_c('tr', _vm._l((_vm.printTableHead), function(item) {
    return _c('td', {
      staticClass: "td head"
    }, [_vm._v(_vm._s(item))])
  }), 0)]), _vm._v(" "), _vm._l((_vm.childList), function(item, index) {
    return _c('tr', [_c('td', [_c('label', [_vm._v(_vm._s(item.item_no || '-'))])]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.ext_part_no || '-'))]), _vm._v(" "), (item.img) ? _c('td', [_c('div', {
      staticClass: "td-img"
    }, [_c('img', {
      attrs: {
        "src": _vm._f("getImgUrl")(item.img)
      }
    })])]) : _c('td', [_vm._v("-")]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.name || '-'))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.needAttr.spec || '-'))]), _vm._v(" "), (!item.needAttr.pack) ? _c('td', [_vm._v("-")]) : _c('td', [_vm._v(_vm._s(item.needAttr.pack) + " " + _vm._s(_vm._f("packUnitType")(item.needAttr.packUnti)))]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.needAttr.packSize || '-'))]), _vm._v(" "), (!item.needAttr.price) ? _c('td', [_vm._v("-")]) : _c('td', [_vm._v("\n                " + _vm._s(_vm._f("currencyType")(item.needAttr.currency)) + "\n                " + _vm._s(item.needAttr.price ? parseFloat(item.needAttr.price) / 100 : 0) + "\n              ")]), _vm._v(" "), _c('td', [_vm._v(_vm._s(item.link_bom || '-'))])])
  })], 2)]) : _vm._e()])])]), _vm._v(" "), _c('el-dialog', {
    attrs: {
      "title": _vm.$t('deleteProductDialog.title'),
      "visible": _vm.bomListDeleteDialogVisible,
      "size": "tiny"
    },
    on: {
      "update:visible": function($event) {
        _vm.bomListDeleteDialogVisible = $event
      }
    }
  }, [_c('p', [_vm._v(_vm._s(_vm.$t('deleteProductDialog.content')))]), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "preview"
    },
    on: {
      "click": _vm.deleteBom
    }
  }, [_vm._v(_vm._s(_vm.$t('yes')))]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": function($event) {
        _vm.bomListDeleteDialogVisible = false
      }
    }
  }, [_vm._v(_vm._s(_vm.$t('no')))])], 1)]), _vm._v(" "), _c('el-dialog', {
    staticClass: "large-image",
    attrs: {
      "title": "Larger-Image",
      "visible": _vm.largeImgDialogVisible,
      "size": "large"
    },
    on: {
      "update:visible": function($event) {
        _vm.largeImgDialogVisible = $event
      }
    }
  }, [_c('img', {
    staticClass: "img",
    attrs: {
      "src": _vm._f("getImgUrl")(_vm.upload.photographSrc)
    }
  }), _c('br')])], 1)
},staticRenderFns: []}


//////////////////
// WEBPACK FOOTER
// ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-8d0afb5a","hasScoped":false}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/component/product/bom-list.vue
// module id = 1949
// module chunks = 76