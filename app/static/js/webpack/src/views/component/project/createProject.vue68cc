module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "create-project"
  }, [_c('div', {
    staticClass: "icons",
    on: {
      "click": _vm.back
    }
  }, [_c('div', {
    staticClass: "icon-item back",
    attrs: {
      "title": "Back"
    }
  })]), _vm._v(" "), _c('el-form', {
    staticClass: "demo-form-inline",
    attrs: {
      "inline": true
    }
  }, [_c('el-form-item', {
    attrs: {
      "label": "项目代号:"
    }
  }, [_c('el-input', {
    attrs: {
      "placeholder": "Project No.",
      "clearable": ""
    },
    model: {
      value: (_vm.projectNumberInput),
      callback: function($$v) {
        _vm.projectNumberInput = $$v
      },
      expression: "projectNumberInput"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "车辆系统:"
    }
  }, [_c('el-input', {
    attrs: {
      "placeholder": "vehicle system",
      "clearable": ""
    },
    model: {
      value: (_vm.vehicleSystem),
      callback: function($$v) {
        _vm.vehicleSystem = $$v
      },
      expression: "vehicleSystem"
    }
  })], 1), _vm._v(" "), _c('el-form-item', [_c('div', {
    staticClass: "project-btn"
  }, [_c('el-button', {
    staticClass: "save-project",
    on: {
      "click": _vm.saveProject
    }
  }, [_vm._v(_vm._s(_vm.saveType))])], 1)])], 1), _vm._v(" "), _c('el-collapse', {
    staticClass: "show-el-collapse",
    attrs: {
      "accordion": ""
    },
    on: {
      "change": _vm.handleChange
    },
    model: {
      value: (_vm.activeNames),
      callback: function($$v) {
        _vm.activeNames = $$v
      },
      expression: "activeNames"
    }
  }, _vm._l((_vm.elCollapseData), function(item, index) {
    return _c('el-collapse-item', {
      key: index,
      attrs: {
        "title": item.name,
        "name": item.name
      }
    }, [_c('template', {
      slot: "title"
    }, [_c('img', {
      staticClass: "icon",
      attrs: {
        "src": item.img
      }
    }), _vm._v(" "), _c('span', [_vm._v(_vm._s(item.name))])]), _vm._v(" "), _c('el-form', [(item.type != 'param') ? _c('el-form-item', {
      attrs: {
        "label": "name:"
      }
    }, [_c('el-select', {
      attrs: {
        "placeholder": "请选择"
      },
      on: {
        "change": _vm.getSelectPhraseName
      },
      model: {
        value: (item.phraseName),
        callback: function($$v) {
          _vm.$set(item, "phraseName", $$v)
        },
        expression: "item.phraseName"
      }
    }, _vm._l((_vm.selectablePhraseNameList), function(item, index) {
      return _c('el-option', {
        key: index,
        attrs: {
          "label": item.name,
          "value": item.value
        }
      })
    }), 1)], 1) : _vm._e(), _vm._v(" "), _vm._l((item.paramList), function(paramItem, paramIndex) {
      return _c('el-form-item', {
        key: paramIndex,
        attrs: {
          "label": paramItem.name + ':'
        }
      }, [_c('el-input', {
        nativeOn: {
          "click": function($event) {
            return _vm.addData(paramItem, item)
          }
        },
        model: {
          value: (_vm.projectInfo[item.type + paramItem.type + 'name']),
          callback: function($$v) {
            _vm.$set(_vm.projectInfo, item.type + paramItem.type + 'name', $$v)
          },
          expression: "projectInfo[item.type + paramItem.type + 'name']"
        }
      })], 1)
    })], 2)], 2)
  }), 1), _vm._v(" "), _c('el-dialog', {
    staticClass: "dialog",
    attrs: {
      "title": 'Add ' + _vm.phraseType + ' Data',
      "visible": _vm.addPhraseVisible,
      "custom-class": _vm.categoryDialog,
      "size": "large",
      "top": "10%"
    },
    on: {
      "update:visible": function($event) {
        _vm.addPhraseVisible = $event
      }
    }
  }, [(_vm.isCreate) ? _c('el-select', {
    attrs: {
      "placeholder": "请选择"
    },
    on: {
      "change": _vm.getSelectedParam
    },
    model: {
      value: (_vm.selectedParam),
      callback: function($$v) {
        _vm.selectedParam = $$v
      },
      expression: "selectedParam"
    }
  }, _vm._l((_vm.selectableParamList), function(item, index) {
    return _c('el-option', {
      key: index,
      attrs: {
        "label": item.name,
        "value": item.value
      }
    })
  }), 1) : _c('el-radio-group', {
    staticClass: "select-phrase",
    on: {
      "change": _vm.changeSelectedParam
    },
    model: {
      value: (_vm.selectedPhraseName),
      callback: function($$v) {
        _vm.selectedPhraseName = $$v
      },
      expression: "selectedPhraseName"
    }
  }, _vm._l((_vm.allPhraseData), function(item, index) {
    return _c('el-radio', {
      key: index,
      attrs: {
        "label": item.id
      }
    }, [_vm._v(_vm._s(item.name))])
  }), 1), _vm._v(" "), _c('div', {
    staticClass: "dialog-footer",
    attrs: {
      "slot": "footer"
    },
    slot: "footer"
  }, [_c('el-button', {
    attrs: {
      "type": "preview"
    },
    on: {
      "click": _vm.savePhraseData
    }
  }, [_vm._v("confirm")]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": function($event) {
        _vm.addPhraseVisible = false
      }
    }
  }, [_vm._v("cancel")])], 1)], 1), _vm._v(" "), _c('el-dialog', {
    staticClass: "dialog add-param-dialog",
    attrs: {
      "title": 'add new param',
      "visible": _vm.addNewParamVisible,
      "custom-class": _vm.categoryDialog,
      "size": "large",
      "top": "10%"
    },
    on: {
      "update:visible": function($event) {
        _vm.addNewParamVisible = $event
      }
    }
  }, [_c('el-form', [_c('el-form-item', {
    attrs: {
      "label": "name:"
    }
  }, [_c('el-input', {
    model: {
      value: (_vm.paramName),
      callback: function($$v) {
        _vm.paramName = $$v
      },
      expression: "paramName"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "type:"
    }
  }, [_c('el-select', {
    attrs: {
      "placeholder": "请选择"
    },
    on: {
      "change": _vm.getSelectedType
    },
    model: {
      value: (_vm.selectedType),
      callback: function($$v) {
        _vm.selectedType = $$v
      },
      expression: "selectedType"
    }
  }, _vm._l((_vm.categoryTypeData), function(item, index) {
    return _c('el-option', {
      key: index,
      attrs: {
        "label": item.name,
        "value": item.value
      }
    })
  }), 1)], 1), _vm._v(" "), _c('el-form-item', {
    attrs: {
      "label": "value:"
    }
  }, [_c('el-input', {
    model: {
      value: (_vm.paramValue),
      callback: function($$v) {
        _vm.paramValue = $$v
      },
      expression: "paramValue"
    }
  })], 1), _vm._v(" "), _c('el-form-item', {
    staticClass: "save-param"
  }, [_c('el-button', {
    on: {
      "click": _vm.saveParam
    }
  }, [_vm._v("save")])], 1)], 1)], 1)], 1)
},staticRenderFns: []}


//////////////////
// WEBPACK FOOTER
// ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-78856f8f","hasScoped":false}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/component/project/createProject.vue
// module id = 2173
// module chunks = 76