module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: "detail"
  }, [_c('div', {
    staticClass: "detail-content"
  }, [_c('label', {
    staticClass: "title"
  }, [(_vm.testSelect.No == 8) ? _c('div', {
    staticClass: "title-left"
  }, [_c('img', {
    staticClass: "icon",
    attrs: {
      "src": require("../../assets/images/icon/icon-hmi.png")
    }
  }), _vm._v(" "), _c('span', [_vm._v(_vm._s(_vm.$t('cNam.hmi')))]), _vm._v(" "), (_vm.tabToUpdate) ? _c('span', [_vm._v(_vm._s(_vm.$t('cNam.update')))]) : _vm._e()]) : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 9) ? _c('div', {
    staticClass: "title-left"
  }, [_c('img', {
    staticClass: "icon",
    attrs: {
      "src": require("../../assets/images/icon/icon-controller.png")
    }
  }), _vm._v(" "), _c('span', [_vm._v(_vm._s(_vm.$t('cNam.controller')))]), _vm._v(" "), (_vm.tabToUpdate) ? _c('span', [_vm._v(_vm._s(_vm.$t('cNam.update')))]) : _vm._e()]) : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 10) ? _c('div', {
    staticClass: "title-left"
  }, [_c('img', {
    staticClass: "icon",
    attrs: {
      "src": require("../../assets/images/icon/icon-battery.png")
    }
  }), _vm._v(" "), _c('span', [_vm._v(_vm._s(_vm.$t('cNam.battery')))])]) : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 11) ? _c('div', {
    staticClass: "title-left"
  }, [_c('img', {
    staticClass: "icon",
    attrs: {
      "src": require("../../assets/images/icon/icon-pedal.png")
    }
  }), _vm._v(" "), _c('span', [_vm._v(_vm._s(_vm.$t('pedalSensor')))]), _vm._v(" "), (_vm.tabToUpdate) ? _c('span', [_vm._v(_vm._s(_vm.$t('cNam.update')))]) : _vm._e()]) : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 7) ? _c('div', {
    staticClass: "title-left"
  }, [_c('img', {
    staticClass: "icon",
    attrs: {
      "src": require("../../assets/images/icon/icon-motor.png")
    }
  }), _vm._v(" "), _c('span', [_vm._v(_vm._s(_vm.$t('cNam.motor')))]), _vm._v(" "), (_vm.tabToUpdate) ? _c('span', [_vm._v(_vm._s(_vm.$t('cNam.update')))]) : _vm._e()]) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "title-right",
    on: {
      "click": _vm.closeItemDetail
    }
  }, [_c('i', {
    staticClass: "el-icon-close"
  })])]), _vm._v(" "), _c('div', {
    staticClass: "content"
  }, [(!_vm.tabToUpdate) ? [_c('div', {
    staticClass: "info"
  }, [(_vm.testSelect.No == 8) ? [_c('div', {
    staticClass: "info-left"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.hmiInfo.sn),
      callback: function($$v) {
        _vm.$set(_vm.hmiInfo, "sn", $$v)
      },
      expression: "hmiInfo.sn"
    }
  })], 1), _vm._v(" "), (_vm.hmiInfo.customer_sn) ? _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("Customer SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.hmiInfo.customer_sn),
      callback: function($$v) {
        _vm.$set(_vm.hmiInfo, "customer_sn", $$v)
      },
      expression: "hmiInfo.customer_sn"
    }
  })], 1) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.model')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.hmiInfo.model),
      callback: function($$v) {
        _vm.$set(_vm.hmiInfo, "model", $$v)
      },
      expression: "hmiInfo.model"
    }
  })], 1)]), _vm._v(" "), _c('div', {
    staticClass: "info-right"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.softwareVersion')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    class: {
      active: _vm.testSelect.update
    },
    model: {
      value: (_vm.hmiInfo.version),
      callback: function($$v) {
        _vm.$set(_vm.hmiInfo, "version", $$v)
      },
      expression: "hmiInfo.version"
    }
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.hardwareVersion')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.hmiInfo.hardVersion),
      callback: function($$v) {
        _vm.$set(_vm.hmiInfo, "hardVersion", $$v)
      },
      expression: "hmiInfo.hardVersion"
    }
  })], 1)])] : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 9) ? [_c('div', {
    staticClass: "info-left"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.controllerInfo.sn),
      callback: function($$v) {
        _vm.$set(_vm.controllerInfo, "sn", $$v)
      },
      expression: "controllerInfo.sn"
    }
  })], 1), _vm._v(" "), (_vm.controllerInfo.customer_sn) ? _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("Customer SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.controllerInfo.customer_sn),
      callback: function($$v) {
        _vm.$set(_vm.controllerInfo, "customer_sn", $$v)
      },
      expression: "controllerInfo.customer_sn"
    }
  })], 1) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.model')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.controllerInfo.model),
      callback: function($$v) {
        _vm.$set(_vm.controllerInfo, "model", $$v)
      },
      expression: "controllerInfo.model"
    }
  })], 1)]), _vm._v(" "), _c('div', {
    staticClass: "info-right"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.softwareVersion')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    class: {
      active: _vm.testSelect.update
    },
    model: {
      value: (_vm.controllerInfo.version),
      callback: function($$v) {
        _vm.$set(_vm.controllerInfo, "version", $$v)
      },
      expression: "controllerInfo.version"
    }
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.hardwareVersion')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.controllerInfo.hardVersion),
      callback: function($$v) {
        _vm.$set(_vm.controllerInfo, "hardVersion", $$v)
      },
      expression: "controllerInfo.hardVersion"
    }
  })], 1)])] : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 10) ? [_c('div', {
    staticClass: "info-left"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.batteryInfo.sn),
      callback: function($$v) {
        _vm.$set(_vm.batteryInfo, "sn", $$v)
      },
      expression: "batteryInfo.sn"
    }
  })], 1), _vm._v(" "), (_vm.batteryInfo.customer_sn) ? _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("Customer SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.batteryInfo.customer_sn),
      callback: function($$v) {
        _vm.$set(_vm.batteryInfo, "customer_sn", $$v)
      },
      expression: "batteryInfo.customer_sn"
    }
  })], 1) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.model')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.batteryInfo.model),
      callback: function($$v) {
        _vm.$set(_vm.batteryInfo, "model", $$v)
      },
      expression: "batteryInfo.model"
    }
  })], 1)]), _vm._v(" "), _c('div', {
    staticClass: "info-right"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.softwareVersion')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    class: {
      active: _vm.testSelect.update
    },
    model: {
      value: (_vm.batteryInfo.version),
      callback: function($$v) {
        _vm.$set(_vm.batteryInfo, "version", $$v)
      },
      expression: "batteryInfo.version"
    }
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.hardwareVersion')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.batteryInfo.hardVersion),
      callback: function($$v) {
        _vm.$set(_vm.batteryInfo, "hardVersion", $$v)
      },
      expression: "batteryInfo.hardVersion"
    }
  })], 1)])] : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 11) ? [_c('div', {
    staticClass: "info-left"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.pedalSensorInfo.sn),
      callback: function($$v) {
        _vm.$set(_vm.pedalSensorInfo, "sn", $$v)
      },
      expression: "pedalSensorInfo.sn"
    }
  })], 1), _vm._v(" "), (_vm.pedalSensorInfo.customer_sn) ? _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("Customer SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.pedalSensorInfo.customer_sn),
      callback: function($$v) {
        _vm.$set(_vm.pedalSensorInfo, "customer_sn", $$v)
      },
      expression: "pedalSensorInfo.customer_sn"
    }
  })], 1) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.softwareVersion')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    class: {
      active: _vm.testSelect.update
    },
    model: {
      value: (_vm.pedalSensorInfo.version),
      callback: function($$v) {
        _vm.$set(_vm.pedalSensorInfo, "version", $$v)
      },
      expression: "pedalSensorInfo.version"
    }
  })], 1)]), _vm._v(" "), _c('div', {
    staticClass: "info-right"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.model')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.pedalSensorInfo.name),
      callback: function($$v) {
        _vm.$set(_vm.pedalSensorInfo, "name", $$v)
      },
      expression: "pedalSensorInfo.name"
    }
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.hardwareVersion')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.pedalSensorInfo.hardVersion),
      callback: function($$v) {
        _vm.$set(_vm.pedalSensorInfo, "hardVersion", $$v)
      },
      expression: "pedalSensorInfo.hardVersion"
    }
  })], 1)])] : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 7) ? [_c('div', {
    staticClass: "info-left"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.motorInfo.sn),
      callback: function($$v) {
        _vm.$set(_vm.motorInfo, "sn", $$v)
      },
      expression: "motorInfo.sn"
    }
  })], 1), _vm._v(" "), (_vm.motorInfo.customer_sn) ? _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v("Customer SN")]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.motorInfo.customer_sn),
      callback: function($$v) {
        _vm.$set(_vm.motorInfo, "customer_sn", $$v)
      },
      expression: "motorInfo.customer_sn"
    }
  })], 1) : _vm._e(), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.power')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.motorInfo.power),
      callback: function($$v) {
        _vm.$set(_vm.motorInfo, "power", $$v)
      },
      expression: "motorInfo.power"
    }
  }, [_c('template', {
    slot: "append"
  }, [_vm._v("W")])], 2)], 1), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.voltage')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.motorInfo.voltage),
      callback: function($$v) {
        _vm.$set(_vm.motorInfo, "voltage", $$v)
      },
      expression: "motorInfo.voltage"
    }
  }, [_c('template', {
    slot: "append"
  }, [_vm._v("V")])], 2)], 1)]), _vm._v(" "), _c('div', {
    staticClass: "info-right"
  }, [_c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.model')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.motorInfo.model),
      callback: function($$v) {
        _vm.$set(_vm.motorInfo, "model", $$v)
      },
      expression: "motorInfo.model"
    }
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.wheelSize')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.motorInfo.wheelSize),
      callback: function($$v) {
        _vm.$set(_vm.motorInfo, "wheelSize", $$v)
      },
      expression: "motorInfo.wheelSize"
    }
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "item"
  }, [_c('label', {
    staticClass: "label"
  }, [_vm._v(_vm._s(_vm.$t('cNam.rpm')))]), _vm._v(" "), _c('el-input', {
    staticClass: "input",
    model: {
      value: (_vm.motorInfo.rpm),
      callback: function($$v) {
        _vm.$set(_vm.motorInfo, "rpm", $$v)
      },
      expression: "motorInfo.rpm"
    }
  })], 1)])] : _vm._e()], 2), _vm._v(" "), _c('div', {
    staticClass: "message"
  }, [(_vm.testSelect.No == 8 && _vm.hmiInfo.tip) ? _c('div', [_vm._v("\n            " + _vm._s(_vm.$t('cNam.message')) + ": "), _c('span', [_vm._v(_vm._s(_vm.hmiInfo.tip))])]) : (_vm.testSelect.No == 9 && _vm.controllerInfo.tip) ? _c('div', [_vm._v("\n            " + _vm._s(_vm.$t('cNam.message')) + ": "), _c('span', [_vm._v(_vm._s(_vm.controllerInfo.tip))])]) : (_vm.testSelect.No == 10 && _vm.batteryInfo.tip) ? _c('div', [_vm._v("\n            " + _vm._s(_vm.$t('cNam.message')) + ": "), _c('span', [_vm._v(_vm._s(_vm.batteryInfo.tip))])]) : (_vm.testSelect.No == 11 && _vm.pedalSensorInfo.tip) ? _c('div', [_vm._v("\n            " + _vm._s(_vm.$t('cNam.message')) + ": "), _c('span', [_vm._v(_vm._s(_vm.pedalSensorInfo.tip))])]) : _c('div', [_vm._v("\n            " + _vm._s(_vm.$t('cNam.message')) + ": "), _c('span', [_vm._v(_vm._s(_vm.motorInfo.tip))])])]), _vm._v(" "), (!_vm.testSelect.update) ? void 0 : _vm._e(), _vm._v(" "), (_vm.testSelect.update) ? [_c('div', {
    staticClass: "bottom-title"
  }, [_c('span', [_vm._v(_vm._s(_vm.$t('updateHistory')))])]), _vm._v(" "), _c('div', {
    staticClass: "bottom-content"
  }, [_c('el-table', {
    staticStyle: {
      "width": "100%"
    },
    attrs: {
      "data": _vm.tableData,
      "empty-text": "No Data"
    }
  }, [_c('el-table-column', {
    attrs: {
      "prop": "version",
      "align": "center",
      "label": "Version"
    }
  }), _vm._v(" "), _c('el-table-column', {
    attrs: {
      "align": "center",
      "label": "Update Time"
    },
    scopedSlots: _vm._u([{
      key: "default",
      fn: function(scope) {
        return [_vm._v("\n                  " + _vm._s(_vm._f("dateFormat")(scope.row.create_time)) + "\n                ")]
      }
    }], null, false, 4216390813)
  }), _vm._v(" "), _c('el-table-column', {
    attrs: {
      "prop": "remark",
      "align": "center",
      "label": "Remark"
    }
  }), _vm._v(" "), _c('el-table-column', {
    attrs: {
      "align": "center",
      "label": "Operation"
    },
    scopedSlots: _vm._u([{
      key: "default",
      fn: function(scope) {
        return [_c('div', {
          staticClass: "operation",
          class: {
            active: _vm.versionCompare < scope.row.version
          },
          on: {
            "click": function($event) {
              return _vm.goToUpdate(scope.row)
            }
          }
        }, [_vm._v("\n                    " + _vm._s(_vm.$t('cNam.update')) + "\n                  ")])]
      }
    }], null, false, 1442355473)
  })], 1), _vm._v(" "), _c('div', {
    staticClass: "operation cancel",
    on: {
      "click": _vm.closeItemDetail
    }
  }, [_vm._v(_vm._s(_vm.$t('cNam.cancel')))])], 1)] : _vm._e()] : _vm._e(), _vm._v(" "), (_vm.tabToUpdate && _vm.testSelect.status > 0) ? [_c('div', {
    staticClass: "info update"
  }, [_c('div', {
    staticClass: "update-top"
  }, [_c('div', {
    staticClass: "update-head"
  }, [_c('span', [_vm._v(_vm._s(_vm.$t('updateTitle')) + ": " + _vm._s(_vm.selectHWFile.version) + " ")]), _vm._v(" "), _c('el-progress', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.percentage > 0),
      expression: "percentage > 0"
    }],
    staticClass: "progress",
    attrs: {
      "percentage": _vm.percentage
    }
  }), _vm._v(" "), (_vm.percentage == 100) ? _c('span', {
    staticClass: "finish"
  }, [_vm._v(_vm._s(_vm.$t('finish')))]) : _vm._e()], 1), _vm._v(" "), (_vm.testSelect.No == 8) ? [_c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isCan),
      expression: "isCan"
    }],
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 1: " + _vm._s(_vm.$t('update1111')))]), _vm._v(" "), _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (!_vm.isCan),
      expression: "!isCan"
    }],
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 1: " + _vm._s(_vm.$t('update111')))]), _vm._v(" "), _c('div', {
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 2: " + _vm._s(_vm.$t('update11')))]), _vm._v(" "), _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (_vm.isCan),
      expression: "isCan"
    }],
    staticClass: "text next-line"
  }, [_vm._v(_vm._s(_vm.$t('update122')))]), _vm._v(" "), _c('div', {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: (!_vm.isCan),
      expression: "!isCan"
    }],
    staticClass: "text next-line"
  }, [_vm._v(_vm._s(_vm.$t('update12')))]), _vm._v(" "), _c('div', {
    staticClass: "text next-line"
  }, [_vm._v(_vm._s(_vm.$t('update13')))]), _vm._v(" "), _c('div', {
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 3: " + _vm._s(_vm.$t('update14')))]), _vm._v(" "), _c('div', {
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 4: " + _vm._s(_vm.$t('update15')))])] : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 9) ? [_c('div', {
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 1: " + _vm._s(_vm.$t('update112')))]), _vm._v(" "), _c('div', {
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 2: " + _vm._s(_vm.$t('update11')))]), _vm._v(" "), _c('div', {
    staticClass: "text next-line"
  }, [_vm._v(_vm._s(_vm.$t('update16')))]), _vm._v(" "), _c('div', {
    staticClass: "text next-line"
  }, [_vm._v(_vm._s(_vm.$t('update17')))]), _vm._v(" "), _c('div', {
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 3: " + _vm._s(_vm.$t('update14')))]), _vm._v(" "), _c('div', {
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 4: " + _vm._s(_vm.$t('update19')))])] : _vm._e(), _vm._v(" "), (_vm.testSelect.No == 11) ? [_c('div', {
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 1: " + _vm._s(_vm.$t('update11')))]), _vm._v(" "), _c('div', {
    staticClass: "text next-line"
  }, [_vm._v(_vm._s(_vm.$t('update20')))]), _vm._v(" "), _c('div', {
    staticClass: "text"
  }, [_vm._v(_vm._s(_vm.$t('step')) + " 2: " + _vm._s(_vm.$t('update14')))])] : _vm._e()], 2), _vm._v(" "), _c('div', {
    staticClass: "update-bottom"
  }, [_c('span', {
    class: {
      active: _vm.updateReady
    },
    on: {
      "click": _vm.cancelUpdateModel
    }
  }, [_vm._v(_vm._s(_vm.$t('cNam.cancel')))]), _vm._v(" "), _c('span', {
    class: {
      active: _vm.updateReady
    },
    on: {
      "click": _vm.handleReconnect
    }
  }, [_vm._v(_vm._s(_vm.$t('connection')))])])])] : _vm._e(), _vm._v(" "), (_vm.testSelect.status != 1) ? [_c('div', {
    staticClass: "load-fail-content"
  }, [_c('div', {
    staticClass: "fail-content-center"
  }, [_c('div', {
    staticClass: "item type"
  }, [_vm._m(0), _vm._v(" "), _c('span', {
    staticClass: "right"
  }, [_vm._v(_vm._s(_vm.failDetail.type))])]), _vm._v(" "), _c('div', {
    staticClass: "item description"
  }, [_c('span', {
    staticClass: "left"
  }, [_vm._v(_vm._s(_vm.$t('desc')))]), _vm._v(" "), _c('span', {
    staticClass: "right"
  }, [_vm._v(_vm._s(_vm.failDetail.description))])]), _vm._v(" "), (_vm.testSelect.No == 7) ? _c('div', {
    staticClass: "item note"
  }, [_c('span', {
    staticClass: "left"
  }, [_vm._v(_vm._s(_vm.$t('cNam.note')))]), _vm._v(" "), _c('span', {
    staticClass: "right"
  }, [_vm._v(_vm._s(_vm.failDetail.noteMotor))])]) : _c('div', {
    staticClass: "item note"
  }, [_c('span', {
    staticClass: "left"
  }, [_vm._v(_vm._s(_vm.$t('cNam.note')))]), _vm._v(" "), _c('span', {
    staticClass: "right"
  }, [_vm._v(_vm._s(_vm.failDetail.note))])])]), _vm._v(" "), _c('div', {
    staticClass: "fail-content-bottom"
  }, [_c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": function($event) {
        return _vm.closeItemDetail()
      }
    }
  }, [_vm._v(_vm._s(_vm.$t('cNam.cancel')))]), _vm._v(" "), _c('el-button', {
    attrs: {
      "type": "primary"
    },
    on: {
      "click": _vm.handleReconnect
    }
  }, [_vm._v(_vm._s(_vm.$t('cNam.read')))])], 1)])] : _vm._e()], 2)])])
},staticRenderFns: [function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('span', {
    staticClass: "left"
  }, [_c('img', {
    attrs: {
      "src": require("../../assets/images/diagnosis/icon-fail-warn.png")
    }
  })])
}]}


//////////////////
// WEBPACK FOOTER
// ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-4053de61","hasScoped":false}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/3rd-diagnosis/item-detail.vue
// module id = 1404
// module chunks = 76